

# Para a realiza√ß√£o da etapa de fazer a clonagem da voz, pode-se optar por utilizar a API TTS

# !pip install TTS para instalar a biblioteca 

# Importar a biblioteca 

# Essa documenta√ß√£o encontra-se na p√°gina oficial do TTS em: https://docs.coqui.ai/en/latest/models/tortoise.html

# Observa-se que √© poss√≠vel incluir facilmente a clonagem da voz! Isso pode ser realizado nos pr√≥ximos passos do prot√≥tipo

## ----------------------------------------------------------------------- ##

from TTS.api import TTS

# Get device
device = "cuda" if torch.cuda.is_available() else "cpu"

# List available üê∏TTS models
print(TTS().list_models())

# Init TTS
tts = TTS("tts_models/multilingual/multi-dataset/xtts_v2").to(device)

# Run TTS
# ‚ùó Since this model is multi-lingual voice cloning model, we must set the target speaker_wav and language
# Text to speech list of amplitude values as output
wav = tts.tts(text="Hello world!", speaker_wav="my/cloning/audio.wav", language="en")
# Text to speech to a file
tts.tts_to_file(text="Hello world!", speaker_wav="my/cloning/audio.wav", language="en", file_path="output.wav")

## ----------------------------------------------------------------------- ##


